// MONTY HALL PROBLEM
// ==================
// Suppose you're on a game show, and you're given the choice of three doors: 
// Behind one door is a car; behind the others, goats. You pick a door, say No. 1, 
// and the host, who knows what's behind the doors, opens another door, say No. 3, 
// which has a goat. He then says to you, "Do you want to pick door No. 2?" 
// Is it to your advantage to switch your choice?

num_repetitions = 10000
win_switch = 0
win_stay = 0

// Make room for the results
FOR i = 1 TO 6 LOOP
	PRINT
REPEAT

// Remember where the results should print on the console
x = 0
y = VTAB
y = y - 6
PROC SetupGamePads
FOR i = 1 TO num_repetitions LOOP
	// Choose which door has the money and which the "player" chose
	prize_door = Rnd(3)
	chosen_door = Rnd(3)
	
	// Figure out the door for the game show host to reveal
	revealed_door = Rnd(3)
	WHILE revealed_door = prize_door OR revealed_door = chosen_door LOOP
		revealed_door = revealed_door + 1
		IF revealed_door >= 3 THEN
			revealed_door = 0
		ENDIF
	REPEAT
	
	IF prize_door = chosen_door THEN
		win_stay = win_stay + 1
	ELSE
		win_switch = win_switch + 1
	ENDIF
	PROC ShowResults(x, y, win_stay, win_switch, i)
	
	IF FN IsButtonPressed() THEN 
		BREAK
	ENDIF
REPEAT

PRINT
PRINT "DONE. Total Repetitions = "; i
END

// Show the results of the simulation so far
DEF PROC ShowResults(x, y, count_stay, count_switch, count)
	LOCAL current_paper
	HVTAB(x, y)
	PRINT "Results"
	PRINT "=================================================="
	PRINT "Stay with original door: ";((count_stay * 100.0)/ count);"% (";count_stay;")      "
	PRINT "Switch door: ";((count_switch * 100.0)/ count);"% (";count_switch;")      "
	PRINT // Lets draw a graph of the results somewhat like a progress bar, this general idea works for life bars in a text game.
	current_paper = PAPER
	PAPER = BRIGHTGREEN
	PRINT SPACE$((count_stay * 50)/count);
	PAPER = MAROON
	PRINT SPACE$((count_switch * 50)/count);
	PAPER = current_paper // Change the background color back to normal
ENDPROC

// Setup the gamepads to be read. We don't want to do this every time we look for a button press
DEF PROC SetupGamePads()
	LOCAL i
	FOR i = 0 TO NUMGAMEPADS - 1 LOOP
		SETUPGAMEPAD(i)
	REPEAT
ENDPROC

// Check to see if any gamepad buttons have been clicked or if a keyboard key has been pressed
// Returns 1 if true, and 0 if nothing has been clicked/pressed. 
DEF FN IsButtonPressed()
	LOCAL i, j, ret_val
	
	ret_val = FALSE
	FOR j = 0 TO NUMGAMEPADS - 1 LOOP
		FOR i = 0 TO NUMBUTTONS(j) LOOP
			IF GETBUTTON(j, i) != 0 THEN
				ret_val = TRUE
				BREAK
			ENDIF
		REPEAT
	REPEAT
	
	IF INKEY <> -1 THEN
		ret_val = TRUE
	ENDIF
=ret_val